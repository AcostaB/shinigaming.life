{"version":3,"sources":["app.ts","Dragoon.ts","SimEvent.ts","Damage.ts","PPSEntry.ts","UserAction.ts","BaseSimulator.ts","BaseSimulatorTests.ts","DamageTypes.ts","DragoonSimulator.ts","DragoonSimulatorTests.ts","DragoonTests.ts","environment.ts","main.ts","PPSChart.ts","SimEventType.ts","Simulator.ts","SkillTypes.ts","Tests.ts","resources/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["/// <reference path=\"../typings/index.d.ts\" />\r\nimport { Router, RouterConfiguration } from 'aurelia-router';\r\n\r\nexport class App {\r\n    router: Router;\r\n\r\n    configureRouter(config: RouterConfiguration, router: Router) {\r\n        config.title = 'Dragoon';\r\n        config.map([\r\n            { route: ['', \"dragoon\"],       moduleId: 'Simulator',        name: 'Dragoon' },\r\n            { route: ['tests'],             moduleId: 'Tests',            name: 'Tests' }\r\n        ]);\r\n\r\n        this.router = router;\r\n    }\r\n}","/// <reference path=\"../typings/index.d.ts\" />\r\n\r\n//import {SkillTypes} from './enums/SkillTypes'\r\n//import {DamageTypes} from './enums/DamageTypes'\r\n\r\nexport const Dragoon: IDragoon = {\r\n    TrueThrust: {\r\n        id: \"TrueThrust\",\r\n        name: \"True Thrust\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 150,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 70,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [\"VorpalThrust\"],\r\n        previousInChain: []\r\n    },\r\n\r\n    VorpalThrust: {\r\n        id: \"VorpalThrust\",\r\n        name: \"Vorpal Thrust\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 200,\r\n        missedChainPotency: 150,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 60,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [\"FullThrust\"],\r\n        previousInChain: [\"TrueThrust\"]\r\n    },\r\n\r\n    FullThrust: {\r\n        id: \"FullThrust\",\r\n        name: \"Full Thrust\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 360,\r\n        missedChainPotency: 100,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 60,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [\"WheelingThrust\", \"FangAndClaw\"],\r\n        previousInChain: [\"VorpalThrust\"]\r\n    },\r\n\r\n    ImpulseDrive: {\r\n        id: \"ImpulseDrive\",\r\n        name: \"Impulse Drive\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 180,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 70,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [\"Disembowel\"],\r\n        previousInChain: []\r\n    },\r\n\r\n    Disembowel: {\r\n        id: \"Disembowel\",\r\n        name: \"Disembowel\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 220,\r\n        missedChainPotency: 100,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 20000,\r\n        buffPotency: 0.1,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 60,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: true,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [\"ChaosThrust\"],\r\n        previousInChain: [\"ImpulseDrive\"]\r\n    },\r\n\r\n    ChaosThrust: {\r\n        id: \"ChaosThrust\",\r\n        name: \"Chaos Thrust\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 250,\r\n        missedChainPotency: 150,\r\n        missedPositionalPotency: 200,\r\n        dotDuration: 30000,\r\n        dotPotency: 35,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 60,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: true,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: true,\r\n        nextInChain: [\"WheelingThrust\", \"FangAndClaw\"],\r\n        previousInChain: [\"Disembowel\"]\r\n    },\r\n\r\n    FangAndClaw: {\r\n        id: \"FangAndClaw\",\r\n        name: \"Fang And Claw\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 290,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 180,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: true,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: true,\r\n        nextInChain: [],\r\n        previousInChain: [\"Fang And Claw\", \"Wheeling Thrust\"]\r\n    },\r\n\r\n    WheelingThrust: {\r\n        id: \"WheelingThrust\",\r\n        name: \"Wheeling Thrust\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 290,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 180,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: true,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: true,\r\n        nextInChain: [],\r\n        previousInChain: [\"Fang And Claw\", \"Wheeling Thrust\"]\r\n    },\r\n\r\n    Geirskogul: {\r\n        id: \"Geirskogul\",\r\n        name: \"Geirskogul\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 200,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 180,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 10000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: true,        // Piercing damage buff\r\n        aoe: true,\r\n        positionalRequirement: true,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    Feint: {\r\n        id: \"Feint\",\r\n        name: \"Feint\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 120,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 80,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    KeenFlurry: {\r\n        id: \"KeenFlurry\",\r\n        name: \"Keen Flurry\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 0,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 20000,\r\n        buffPotency: 0,\r\n        cooldown: 90000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    LegSweep: {\r\n        id: \"LegSweep\",\r\n        name: \"Leg Sweep\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 130,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 30000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    HeavyThrust: {\r\n        id: \"HeavyThrust\",\r\n        name: \"Heavy Thrust\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 170,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 24000,\r\n        buffPotency: 0.15,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 70,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: true,        // Piercing damage buff\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [\"RingOfThorns\"],\r\n        previousInChain: []\r\n    },\r\n\r\n    Phlebotomize: {\r\n        id: \"Phlebotomize\",\r\n        name: \"Phlebotomize\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 170,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 24000,\r\n        dotPotency: 30,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 90,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: true,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    PiercingTalon: {\r\n        id: \"PiercingTalon\",\r\n        name: \"Piercing Talon\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 120,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 130,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    DoomSpike: {\r\n        id: \"DoomSpike\",\r\n        name: \"Doom Spike\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 160,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 160,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: true,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    RingOfThorns: {\r\n        id: \"RingOfThorns\",\r\n        name: \"Ring Of Thorns\",\r\n        skillType: SkillTypes.WeaponSkill,\r\n        potency: 150,\r\n        missedChainPotency: 100,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 0,\r\n        mpCost: 0,\r\n        tpCost: 120,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: true,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: [\"HeavyThrust\"]\r\n    },\r\n\r\n    ElusiveJump: {\r\n        id: \"ElusiveJump\",\r\n        name: \"Elusive Jump\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 0,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 180000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    LifeSurge: {\r\n        id: \"LifeSurge\",\r\n        name: \"Life Surge\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 0,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 10000,\r\n        buffPotency: 0.5,\r\n        cooldown: 60000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    BloodForBlood: {\r\n        id: \"BloodForBlood\",\r\n        name: \"Blood For Blood\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 0,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 20000,\r\n        buffPotency: 0.3,\r\n        cooldown: 80000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    PowerSurge: {\r\n        id: \"PowerSurge\",\r\n        name: \"Power Surge\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 0,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 10000,\r\n        buffPotency: 0.5,\r\n        cooldown: 60000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    BattleLitany: {\r\n        id: \"BattleLitany\",\r\n        name: \"Battle Litany\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 0,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 20000,\r\n        buffPotency: 0,\r\n        cooldown: 180000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    BloodOfTheDragon: {\r\n        id: \"BloodOfTheDragon\",\r\n        name: \"Blood Of The Dragon\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 0,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 15000,\r\n        buffPotency: 0.3,\r\n        cooldown: 60000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    Invigorate: {\r\n        id: \"Invigorate\",\r\n        name: \"Invigorate\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 0,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 180000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    Jump: {\r\n        id: \"Jump\",\r\n        name: \"Jump\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 200,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 30000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    SpineshatterDive: {\r\n        id: \"SpineshatterDive\",\r\n        name: \"Spineshatter Dive\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 170,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 60000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: false,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n\r\n    DragonfireDive: {\r\n        id: \"DragonfireDive\",\r\n        name: \"Dragonfire Dive\",\r\n        skillType: SkillTypes.Ability,\r\n        potency: 250,\r\n        missedChainPotency: 0,\r\n        missedPositionalPotency: 0,\r\n        dotDuration: 0,\r\n        dotPotency: 0,\r\n        animationDuration: 1300, // In milliseconds\r\n        buffDuration: 0,\r\n        buffPotency: 0,\r\n        cooldown: 120000,\r\n        mpCost: 0,\r\n        tpCost: 0,\r\n        damageType: DamageTypes.Piercing,\r\n        addedBuff: false,\r\n        aoe: true,\r\n        positionalRequirement: false,\r\n        nextInChain: [],\r\n        previousInChain: []\r\n    },\r\n} \r\n\r\nexport const DragoonArray: Array<ISkill> = [\r\n    Dragoon.TrueThrust,\r\n    Dragoon.VorpalThrust,\r\n    Dragoon.FullThrust,\r\n    Dragoon.ImpulseDrive,\r\n    Dragoon.Disembowel,\r\n    Dragoon.ChaosThrust,\r\n    Dragoon.FangAndClaw,\r\n    Dragoon.WheelingThrust,\r\n    Dragoon.Geirskogul,\r\n    Dragoon.KeenFlurry,\r\n    Dragoon.LegSweep,\r\n    Dragoon.HeavyThrust,\r\n    Dragoon.Phlebotomize,\r\n    Dragoon.PiercingTalon,\r\n    Dragoon.DoomSpike,\r\n    Dragoon.RingOfThorns,\r\n    Dragoon.ElusiveJump,\r\n    Dragoon.LifeSurge,\r\n    Dragoon.BloodForBlood,\r\n    Dragoon.PowerSurge,\r\n    Dragoon.BattleLitany,\r\n    Dragoon.BloodOfTheDragon,\r\n    Dragoon.Invigorate,\r\n    Dragoon.Jump,\r\n    Dragoon.SpineshatterDive,\r\n    Dragoon.DragonfireDive,\r\n];","/// <reference path=\"../typings/index.d.ts\" />\r\n\r\n//import {SimEventType} from './enums/SimEventType'\r\n\r\nexport class SimEvent implements ISimEvent {\r\n    timestamp: number;\r\n    damage: IDamage;\r\n    eventType: SimEventType;\r\n    skill: ISkill;\r\n    activeBuffs: Array<IActiveSkill>;\r\n\r\n    constructor(timestamp: number, skill: ISkill, eventType: SimEventType, activeBuffs: Array<IActiveSkill> = null) {\r\n        this.timestamp = timestamp;\r\n        this.eventType = eventType;\r\n        this.skill = skill;\r\n        this.activeBuffs = activeBuffs;\r\n    }\r\n} ","/// <reference path=\"../typings/index.d.ts\" />\r\n\r\nexport class Damage implements IDamage {\r\n    time: number = 0;\r\n    skill: ISkill;\r\n    buffs: Array<string>;\r\n    totalDamage: number;\r\n\r\n    constructor(time: number, skill: ISkill, buffs: Array<string>, totalDamage: number) {\r\n        this.time = time;\r\n        this.skill = skill;\r\n        this.buffs = buffs;\r\n        this.totalDamage = totalDamage;\r\n    }\r\n} ","export class PPSEntry implements IPPSEntry {\r\n    pps: number;\r\n    time: number;\r\n\r\n    constructor(pps: number, time: number) {\r\n        this.pps = pps;\r\n        this.time = time;\r\n    }\r\n}","export class UserAction implements IUserAction {\r\n    name: string;\r\n    time: number;\r\n\r\n    constructor(name: string, time: number) {\r\n        this.name = name;\r\n        this.time = time;\r\n    }\r\n}","import { Dragoon } from './Dragoon';\r\nimport { DragoonArray } from './Dragoon';\r\nimport { SimEvent } from './SimEvent';\r\nimport { Damage } from './Damage';\r\nimport { PPSEntry } from './PPSEntry';\r\nimport { UserAction } from './UserAction';\r\n\r\nexport class BaseSimulator implements IBaseSimulator {\r\n\r\n    // Properties\r\n    private _time: number = 0;\r\n\r\n    public time: number = 0;\r\n    public totalPotency: number = 0;\r\n\r\n    pps: number = 0;\r\n    // WHAT IS DOT TIME??\r\n    dotTime: number = 0;\r\n    globalCooldown: number = 2500;\r\n\r\n    // Need to remove this. I dont want the base simulator to be model dependent.\r\n    dragoon: IDragoon = Dragoon;\r\n    dragoonArray: Array<ISkill> = DragoonArray;\r\n\r\n    events: Array<ISimEvent> = [];\r\n\r\n    activeDots: Array<IActiveSkill> = [];\r\n    activeBuffs: Array<IActiveSkill> = [];\r\n\r\n    damageLog: Array<IDamage> = [];\r\n    ppsLog: Array<IPPSEntry> = [];\r\n    userActions: Array<IUserAction> = [];\r\n    userActionsJSON: string;\r\n    userActionsImport: string;\r\n\r\n    skillsOnCooldown: Array<ISkillOnCooldown> = [];\r\n\r\n    nextInChain: Array<string> = [];\r\n\r\n    chainGracePeriod: number = 5000;\r\n\r\n    // Methods\r\n    activateSkill(skill: ISkill): void {\r\n        // TODO there needs to be some sort of gate here. A user cant use ANY skill here if another skill is still in the animation\r\n            // this might only be a problem with weaponskills and abilities in cooldown. \r\n                // No, this is a problem for everything because a user can click a skill multiple times, or simply click a skill on cooldown \r\n        // TODO this validation of blood of the dragon should be extracted\r\n        if (!this.validateActivatedSkill(skill)) {\r\n            return;\r\n        }\r\n\r\n        if (!this.validateActivatedSkillModelSpecific(skill)) {\r\n            return;\r\n        }\r\n        \r\n        this.userActions.push(new UserAction(skill.id, this.time));\r\n        this.userActionsJSON = this.stringify(this.userActions).toString(); \r\n\r\n        //TODO i dont like this. this is always removing the events. and it doesnt specify what it is removing.\r\n        this.removeFromSimEvents(skill);\r\n        this.removeFromActiveBuffs(skill.id);\r\n        this.removeFromActiveDots(skill.id);\r\n\r\n        // TODO: this if statement needs to also consider that maybe the global cooltime is not active. \r\n        // keep processing events until global cooldown is finished.\r\n        if (skill.skillType === SkillTypes.WeaponSkill && this.events.some(simEvent => simEvent.eventType === SimEventType.GlobalCooldown)) {\r\n            var globalCooldown: boolean = true;\r\n            // keep processing events until the activated skill has finished its animation\r\n            while (globalCooldown) {\r\n                if (this.events[0].eventType === SimEventType.GlobalCooldown) {\r\n                    globalCooldown = false;\r\n                }\r\n                this.processNextSimEvent();\r\n            } \r\n        }\r\n\r\n        var buffs: Array<IActiveSkill> = this.activeBuffs.slice();\r\n\r\n        // Create animation event\r\n        var animationEvent: ISimEvent = new SimEvent(this.time + skill.animationDuration, skill, SimEventType.AnimationFinished, buffs);\r\n        var eventPositionInEventCollection: number = this.determinePositionInSimEvents(animationEvent);\r\n        if (eventPositionInEventCollection === this.events.length) {\r\n            this.events.push(animationEvent);\r\n        } else {\r\n            this.events.splice(eventPositionInEventCollection, 0, animationEvent);\r\n        } \r\n\r\n        var skillInAnimation: boolean = true;\r\n        // keep processing events until the activated skill has finished its animation\r\n        while (skillInAnimation) {\r\n            if (this.events[0].eventType === SimEventType.AnimationFinished && this.events[0].skill.id == skill.id) {\r\n                skillInAnimation = false;\r\n            }\r\n            this.processNextSimEvent();\r\n        }\r\n\r\n    }\r\n\r\n    createSimEventsFromActivatedSkill(skill: ISkill): Array<ISimEvent> {\r\n        //this.removeFromSimEvents(skill);\r\n\r\n        var events: Array<ISimEvent> = [];\r\n\r\n        // TODO make this prettier big = (x > 10) ? \"greater 10\" : (x < 5) ? \"less 5\" : \"between 5 and 10\";\r\n        if (this.createGlobalCooldownEvent(skill)) { events.push(this.createGlobalCooldownEvent(skill)); }\r\n        if (this.createDotEvents(skill)) { events = events.concat(this.createDotEvents(skill)); }\r\n        if (this.createChainEndEvent(skill)) { events.push(this.createChainEndEvent(skill)); }\r\n        if (this.createBuffEndEvent(skill)) { events.push(this.createBuffEndEvent(skill)); }\r\n        if (this.createCooldownEvent(skill)) { events.push(this.createCooldownEvent(skill)); }\r\n\r\n        return events;\r\n    }\r\n\r\n    addToSimEvents(events: Array<ISimEvent>): void {\r\n        var vm: IBaseSimulator = this;\r\n        events.forEach((value, index) => {\r\n            var eventCollectionIndexPosition: number = this.determinePositionInSimEvents(value);\r\n            if (eventCollectionIndexPosition === vm.events.length) {\r\n                vm.events.push(value);\r\n            } else {\r\n                vm.events.splice(eventCollectionIndexPosition, 0, value);\r\n            }\r\n        });\r\n    }\r\n\r\n    processSimEvent(event: ISimEvent): void {\r\n        this.processAnimationFinishedEvent(event);\r\n        this.processDotEndEvent(event);\r\n        this.processBuffEndEvent(event);\r\n        this.processCooldownEvent(event);\r\n        this.processDotTickEvent(event);\r\n        this.processGlobalCooldownEvent(event);\r\n        this.processChainEndEvent(event);\r\n\r\n        this.removeOneTimeUseBuff(event);\r\n\r\n        this.classSpecificEventProcessing(event);\r\n    }\r\n\r\n    processNextSimEvent(): void {\r\n        // Advance the time\r\n        this.time = this.events[0].timestamp;\r\n        this.pps = Math.floor((this.totalPotency / (this._time / 1000)) * 100) / 100;\r\n        \r\n        // TODO this should handle the things that happen when time passes. I.E. handle updating the counter for buffs etc, handle the animation of skill cooldowns\r\n            // on second thought this should be handled in the process event method\r\n                // on third thought maybe not\r\n\r\n        var event = this.events[0]; \r\n        this.events.splice(0, 1); \r\n        this.processSimEvent(event);\r\n    }\r\n\r\n    // COMPLETE\r\n    determinePositionInSimEvents(event: ISimEvent): number {\r\n\r\n        if (this.events.length === 0) {\r\n            return 0;\r\n        }\r\n\r\n        var arrayIndex: number = 0;\r\n        this.events.forEach((value, index) => {\r\n            if (value.timestamp <= event.timestamp) {\r\n                arrayIndex++;\r\n            }\r\n        });\r\n        return arrayIndex;\r\n    }\r\n\r\n    calculateSimEventTimestamp(skill: ISkill): number { throw new Error(\"Not implemented\"); }\r\n\r\n    calculateNextDotEventTimestamp(): number {\r\n        return this.time + (3000 - this.time % 3000);\r\n    }\r\n\r\n    // TODO this seems useless\r\n    addToActiveBuffs(skill: ISkill): void {}\r\n\r\n    // TODO this seems useless\r\n    addToActiveDots(skill: ISkill): void { }\r\n\r\n    removeFromActiveBuffs(skillName: string): void {\r\n        for (var i = this.activeBuffs.length; i > 0; i--) {\r\n            if (this.activeBuffs[i - 1].skill.id === skillName) { this.activeBuffs.splice(i - 1, 1); }\r\n        }\r\n    }\r\n\r\n    removeFromActiveDots(skillName: string): void {\r\n        for (var i = this.activeDots.length; i > 0; i--) {\r\n            if (this.activeDots[i - 1].skill.id === skillName) { this.activeDots.splice(i - 1, 1); }\r\n        }\r\n    }\r\n\r\n    removeFromSkillsOnCooldown(skillName: string): void {\r\n        for (var i = this.skillsOnCooldown.length; i > 0; i--) {\r\n            if (this.skillsOnCooldown[i - 1].name === skillName) { this.skillsOnCooldown.splice(i - 1, 1); }\r\n\r\n        }\r\n    }\r\n\r\n    removeFromSimEvents(skill: ISkill): void {\r\n        for (var i = this.events.length; i > 0; i--) {\r\n            if (this.events[i - 1].skill.id === skill.id && this.events[i - 1].eventType !== SimEventType.GlobalCooldown) {\r\n                this.events.splice(i - 1, 1);\r\n                continue;\r\n            }\r\n\r\n            if (skill.buffDuration > 0 && skill.id === this.events[i - 1].skill.id && this.events[i - 1].eventType === SimEventType.BuffEnd) {\r\n                this.events.splice(i - 1, 1);\r\n            }\r\n        }\r\n        // TODO: this method should also probably handle removing from active skills\r\n        // Be careful with this. If you add an active skill then overwrite it, this method could remove the 2nd active skill that should have stayed in the collection.\r\n    }\r\n\r\n    removeOneTimeUseBuff(event: ISimEvent): void {\r\n        var self: BaseSimulator = this;\r\n        if (event.activeBuffs) {\r\n            event.activeBuffs.forEach((value, index) => {\r\n                if (self.determineIfBuffShouldBeRemoved(event, value.skill.id)) {\r\n                    // Remove the buff end event\r\n                    for (var i = self.events.length; i > 0; i--) {\r\n                        if (self.events[i - 1].eventType === SimEventType.BuffEnd && self.events[i - 1].skill.id === value.skill.id) {\r\n                            self.events.splice(i - 1, 1);\r\n                        }\r\n                    }\r\n\r\n                    // Remove the buff from active buffs\r\n                    for (var i = self.activeBuffs.length; i > 0; i--) {\r\n                        if (self.activeBuffs[i - 1].skill.id === value.skill.id) {\r\n                            self.activeBuffs.splice(i - 1, 1);\r\n                        }\r\n                    }\r\n                }\r\n                // TODO there should maybe be some logic in here to address buff dropping logic. Alternative would be to create a buff end event.\r\n            });\r\n        }\r\n    }\r\n\r\n    addToDamageLog(damage: IDamage): void { }\r\n\r\n    advanceTime(time: number): void {\r\n        var continueAdvancing: boolean = true;\r\n        while (continueAdvancing) {\r\n            if (this.events.length === 0 || this.events[0].timestamp > time) {\r\n                this.time = time;\r\n                this.pps = Math.floor((this.totalPotency / (this._time / 1000)) * 100) / 100;\r\n\r\n                continueAdvancing = false;\r\n            } else {\r\n                this.processNextSimEvent();\r\n            }\r\n        } \r\n    }\r\n\r\n    createDamageEntry(time: number, skill: ISkill, buffs: Array<IActiveSkill>, dotDamage: boolean, correctPositional: boolean, followedChain: boolean): IDamage {\r\n        var potency: number = 0;\r\n        \r\n        // Chaos thrust, WT, FnC have both positional and chain requirements\r\n        if (dotDamage) {\r\n            potency = skill.dotPotency;\r\n        } else {\r\n            if (!followedChain) {\r\n                potency = skill.missedChainPotency;\r\n            }\r\n\r\n            if (!correctPositional) {\r\n                potency = skill.missedPositionalPotency;\r\n            }\r\n\r\n            if (followedChain && correctPositional) {\r\n                potency = skill.potency;\r\n            }\r\n        }\r\n\r\n        var totalPotency: number = this.calculateTotalPotency(skill, potency, buffs);\r\n        var buffList: Array<string> = [];\r\n        buffs.forEach((value, index) => { buffList.push(value.skill.id)});\r\n\r\n        return new Damage(time, skill, buffList, totalPotency);\r\n    }\r\n\r\n    calculateTotalPotency(skill: ISkill, potency: number, buffs: Array<IActiveSkill>): number {\r\n        var self: IBaseSimulator = this;\r\n        var basePotency: number = potency;\r\n        var buffedPotency: number = 0;\r\n        if (buffs) {\r\n            buffs.forEach((activeBuff, index) => {\r\n                var trimmedString: string = activeBuff.skill.id;\r\n                if (self.determineIfBuffCanBeApplied(skill, activeBuff.skill.id) && self.dragoon[trimmedString] != null && self.dragoon[trimmedString].buffPotency) {\r\n                    buffedPotency += self.dragoon[trimmedString].buffPotency * basePotency;\r\n                }\r\n            });\r\n        }\r\n        // the sum of base damage plus the buffed damage\r\n        return basePotency + buffedPotency;\r\n    }\r\n\r\n    private removeTheChainEndEvent(): void {\r\n        for (var i = this.events.length; i > 0; i--) {\r\n            if (this.events[i - 1].eventType === SimEventType.ChainEnd) {\r\n                this.events.splice(i - 1, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleChainChanges(event: ISimEvent): void {\r\n        // TODO this needs to also handle removing the chain end event. \r\n        // TODO removing the event or changing the string should probably happen AFTER the events are created or else they will use incorrect data in evaluation \r\n\r\n        // Nothing about a non weaponskill affects the chain ...\r\n        // TODO ... EXCEPT blood of the dragon\r\n        if (event.skill.skillType !== SkillTypes.WeaponSkill) {\r\n            return;\r\n        }\r\n\r\n        // Chain is broken by using different skill\r\n        if (event.skill.skillType === SkillTypes.WeaponSkill && !this.nextInChain.some(skill => skill === event.skill.id)) {\r\n            this.nextInChain = [];\r\n        }\r\n\r\n        // Time ran out\r\n        if (event.eventType === SimEventType.ChainEnd) {\r\n            this.nextInChain = [];\r\n        }\r\n\r\n        // Starting a new chain\r\n        // TODO this seems like a bug. What if i use something like jump in between chain skills?\r\n        //  this should be handled by the return a few lines above. but should probably still test\r\n        if (event.skill.previousInChain.length === 0 && event.skill.nextInChain.length !== 0) {\r\n            this.nextInChain = event.skill.nextInChain;\r\n\r\n        // This is the correct next skill in the chain\r\n        } else if (this.nextInChain.some(skillId => skillId === event.skill.id)) {\r\n            this.nextInChain = event.skill.nextInChain;\r\n\r\n        // This is the last skill in the chain\r\n        } else if (!event.skill.nextInChain.length) {\r\n            this.nextInChain = [];\r\n        }\r\n        this.removeTheChainEndEvent();\r\n    }\r\n\r\n    validateActivatedSkill(skill: ISkill): boolean {\r\n        return !this.events.some(simEvent => simEvent.eventType === SimEventType.Cooldown && simEvent.skill.id === skill.id);\r\n    }\r\n\r\n\r\n    //#region Event Creation Methods\r\n    createGlobalCooldownEvent(skill: ISkill): ISimEvent {\r\n        //var cooldownEvent: ISimEvent = null;\r\n        if (this.determineIfValidForGlobalCooldownEvent(skill)) {\r\n            var globalCooldowntimestamp: number = this.time + (this.globalCooldown - skill.animationDuration);\r\n            return new SimEvent(globalCooldowntimestamp, skill, SimEventType.GlobalCooldown);\r\n        } else { return null; }\r\n    }\r\n\r\n    createDotEvents(skill: ISkill): Array<ISimEvent> {\r\n        var events: Array<ISimEvent> = [];\r\n        if (this.determineIfValidForDotEvents(skill)) {\r\n            // Create the DoT tick events\r\n            var amountOfDotTicks: number = skill.dotDuration / 3000;\r\n            // This assumes that if a skill is activating then the global time is accurate and in present time\r\n            var nextGlobalDotTickTimestamp: number = this.calculateNextDotEventTimestamp();\r\n            for (var i = 0; i <= amountOfDotTicks - 1; i++) {\r\n                var timestamp: number = nextGlobalDotTickTimestamp + 3000 * i;\r\n                // slice is to copy object. Javascript passed by reference so deleting from collection deleted the value here\r\n                events.push(new SimEvent(timestamp, skill, SimEventType.DotTick, this.activeBuffs.slice()));\r\n            }\r\n\r\n            // Create the DoT end event\r\n            events.push(new SimEvent(this.time + skill.dotDuration, skill, SimEventType.DotEnd));\r\n            return events;\r\n        } else { return null; }\r\n    }\r\n\r\n    createChainEndEvent(skill: ISkill): ISimEvent {\r\n        // be careful with the logic. the first in the chain does not need a previous in chain property\r\n        // take into account the exception that is fang and claw and wheeling thrust. \r\n        if (this.determineIfValidForChainEndEvent(skill)) {\r\n            return new SimEvent(this.time + this.chainGracePeriod, skill, SimEventType.ChainEnd);\r\n        } else { return null; }\r\n    }\r\n\r\n    createBuffEndEvent(skill: ISkill): ISimEvent {\r\n        if (this.determineIfValidForBuffEndEvent(skill)) {\r\n             return new SimEvent((this.time) + skill.buffDuration, skill, SimEventType.BuffEnd);\r\n        } else { return null; }\r\n    }\r\n\r\n    createCooldownEvent(skill: ISkill): ISimEvent {\r\n        if (this.determineIfValidForCooldownEvent(skill)) {\r\n            return new SimEvent((this.time - skill.animationDuration) + skill.cooldown, skill, SimEventType.Cooldown);\r\n        } else { return null; }\r\n    }\r\n\r\n    //#endregion \r\n\r\n    //#region Event Processing Methods\r\n    processAnimationFinishedEvent(event: ISimEvent): void {\r\n        if (event.eventType === SimEventType.AnimationFinished) {\r\n\r\n            var followedChain: boolean = false;\r\n\r\n            if (!event.skill.previousInChain.length) {\r\n                followedChain = true;\r\n            }\r\n\r\n            // Modify this logic for fnc n wt\r\n            if (event.skill.previousInChain && this.nextInChain.some(skill => skill === event.skill.id)) {\r\n                followedChain = true;\r\n            }\r\n\r\n            // Avoid passing by reference by using splice\r\n            var buffs: Array<IActiveSkill> = this.activeBuffs.slice();\r\n\r\n            // If skill has base potency, add it to the damage log\r\n            if (event.skill.potency) {\r\n                // TODO: these last two bools can not be hardcoded.\r\n                var damage: IDamage = this.createDamageEntry(this.time, event.skill, buffs, false, true, followedChain);\r\n                this.damageLog.push(damage);\r\n                this.totalPotency += damage.totalDamage;\r\n                this.pps = Math.floor((this.totalPotency / (this.time / 1000)) * 100) / 100;\r\n                this.ppsLog.push(new PPSEntry(this.pps, this.time));\r\n            }\r\n\r\n            // If the skill has a cooldown, then add to skillsOnCooldown \r\n            if (event.skill.cooldown) {\r\n                this.skillsOnCooldown.push({ name: event.skill.id, endTime: this.time + event.skill.cooldown });\r\n            }\r\n            \r\n            // Add to the active skill collection if necessary\r\n            if (event.skill.dotDuration || event.skill.buffDuration) {\r\n                if (!event.skill.previousInChain.length || (event.skill.previousInChain.length > 0 && this.nextInChain.some(skillId => skillId === event.skill.id))) {\r\n\r\n                    if (event.skill.dotDuration) {\r\n                        this.activeDots.push({ skill: event.skill, startTime: this.time, endTime: this.time + event.skill.dotDuration });\r\n                    }\r\n\r\n                    if (event.skill.buffDuration) {\r\n                        this.activeBuffs.push({ skill: event.skill, startTime: this.time, endTime: this.time + event.skill.buffDuration });\r\n                    }\r\n                }\r\n            }\r\n\r\n            var events: Array<ISimEvent> = this.createSimEventsFromActivatedSkill(event.skill);\r\n            this.handleChainChanges(event);\r\n            this.addToSimEvents(events);\r\n        }\r\n    }\r\n\r\n    processDotEndEvent(event: ISimEvent): void {\r\n        if (event.eventType === SimEventType.DotEnd) {\r\n            this.removeFromActiveDots(event.skill.id);\r\n        }\r\n    }\r\n\r\n    processBuffEndEvent(event: ISimEvent): void {\r\n        if (event.eventType === SimEventType.BuffEnd) {\r\n            this.removeFromActiveBuffs(event.skill.id);\r\n        }\r\n    }\r\n\r\n    processCooldownEvent(event: ISimEvent): void {\r\n        if (event.eventType === SimEventType.Cooldown) {\r\n            // Remove from the active buffs collection \r\n            this.removeFromSkillsOnCooldown(event.skill.id);\r\n        }\r\n    }\r\n\r\n    processDotTickEvent(event: ISimEvent): void {\r\n        if (event.eventType === SimEventType.DotTick) {\r\n            // TODO: these last two bools can not be hardcoded.\r\n            var damage: IDamage = this.createDamageEntry(this.time, event.skill, event.activeBuffs, true, true, true);\r\n            this.damageLog.push(damage);\r\n            this.totalPotency += damage.totalDamage;\r\n            this.pps = Math.floor((this.totalPotency / (this.time / 1000)) * 100) / 100;\r\n            this.ppsLog.push(new PPSEntry(this.pps, this.time));\r\n        }\r\n    }\r\n\r\n    processGlobalCooldownEvent(event: ISimEvent): void {\r\n        if (event.eventType === SimEventType.GlobalCooldown) {\r\n\r\n        }\r\n    }\r\n\r\n    processChainEndEvent(event: ISimEvent): void {\r\n        if (event.eventType === SimEventType.ChainEnd) {\r\n            this.nextInChain = [];\r\n        }\r\n    }\r\n    //#endregion \r\n\r\n    //#region Determine if valid for event creation methods\r\n\r\n    determineIfValidForGlobalCooldownEvent(skill: ISkill): boolean {\r\n        return skill.skillType === SkillTypes.WeaponSkill;\r\n    }\r\n\r\n    determineIfValidForDotEvents(skill: ISkill): boolean {\r\n        return (skill.dotDuration > 0 && skill.dotPotency > 0)\r\n            && (!skill.previousInChain.length\r\n                || (skill.previousInChain.length && this.nextInChain.some(skillId => skillId === skill.id)));\r\n    }\r\n\r\n    determineIfValidForChainEndEvent(skill: ISkill): boolean {\r\n        return ((!skill.previousInChain.length)&& skill.nextInChain.length > 0)\r\n            || (this.nextInChain.some(skillId => skillId === skill.id) && skill.nextInChain.length > 0);\r\n    }\r\n\r\n    determineIfValidForBuffEndEvent(skill: ISkill): boolean {\r\n        return skill.buffDuration > 0;\r\n    }\r\n\r\n    determineIfValidForCooldownEvent(skill: ISkill): boolean {\r\n        return skill.cooldown > 0;\r\n    }\r\n\r\n\r\n    //#endregion \r\n\r\n    //#region Override Methods\r\n    determineIfBuffCanBeApplied(skill: ISkill, buffName: string): boolean { return true; }\r\n\r\n    determineIfBuffShouldBeRemoved(event: ISimEvent, skillName: string): boolean { return false; }\r\n\r\n    classSpecificEventProcessing(event: ISimEvent): void { };\r\n\r\n    validateActivatedSkillModelSpecific(skill: ISkill): boolean { return true };\r\n    //#endregion\r\n\r\n    // not in interface\r\n    formatTime(time: number) : string {\r\n        var minutes: number = Math.floor(time / 60000);\r\n        var seconds: number = (time % 60000)/1000;\r\n        if (minutes > 0) {\r\n            return minutes + \"m \" + seconds + \"s\";\r\n        }\r\n        return seconds + \"s\";\r\n    } \r\n\r\n    formatTimer(time: number): number {\r\n        return Math.floor(time / 1000);\r\n    }\r\n\r\n    updateBuffEndTime(skillName: string, newEndTime: number): void {\r\n        this.activeBuffs.forEach((value, index) => {\r\n            if (value.skill.id == skillName) {\r\n                value.endTime = newEndTime;\r\n            }\r\n        });\r\n    }\r\n\r\n    reset() {\r\n        this.time = 0;\r\n        this.pps = 0;\r\n        this.events = [];\r\n        this.damageLog = [];\r\n        this.ppsLog.length = 0;\r\n        this.skillsOnCooldown = [];\r\n        this.activeDots = [];\r\n        this.activeBuffs = [];\r\n        this.totalPotency = 0;\r\n        this.nextInChain = [];\r\n        this.userActions = [];\r\n    }\r\n\r\n    importUserActions(): void {\r\n        this.reset();\r\n\r\n        JSON.parse(this.userActionsImport).forEach((value, index) => {\r\n            if (this.time != value.time) {\r\n               this.advanceTime(value.time - this.time);\r\n            }\r\n\r\n            this.activateSkill(this.dragoon[value.name]);\r\n        });\r\n    } \r\n\r\n    stringify(userActions: Array<IUserAction>): string {\r\n        return JSON.stringify(userActions);\r\n    }\r\n}","import { BaseSimulator } from './BaseSimulator';\r\nimport { SimEvent } from './SimEvent';\r\nexport class BaseSimulatorTests {\r\n    constructor() {\r\n        QUnit.test(\"PPS: true thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.TrueThrust;\r\n            simulatorViewModel.activateSkill(skill);\r\n\r\n            assert.equal(simulatorViewModel.time, 1300);\r\n            assert.equal(simulatorViewModel.totalPotency, 150);\r\n            assert.equal(simulatorViewModel.pps, 115.38);\r\n        });\r\n\r\n        QUnit.test(\"PPS: true thrust x3\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.TrueThrust;\r\n            simulatorViewModel.activateSkill(skill);\r\n            simulatorViewModel.activateSkill(skill);\r\n            simulatorViewModel.activateSkill(skill);\r\n\r\n            assert.equal(simulatorViewModel.time, 1300 + 2500 + 2500);\r\n            assert.equal(simulatorViewModel.totalPotency, 450);\r\n            assert.equal(simulatorViewModel.pps, 71.42);\r\n        });\r\n\r\n        QUnit.test(\"PPS: true thrust, vorpal thrust. full thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.FullThrust);\r\n\r\n            assert.equal(simulatorViewModel.time, 1300 + 2500 + 2500);\r\n            assert.equal(simulatorViewModel.totalPotency, 150 + 200 + 360);\r\n            assert.equal(simulatorViewModel.pps, 112.69);\r\n        });\r\n\r\n        QUnit.test(\"Opening with: true thrust \", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.TrueThrust;\r\n            simulatorViewModel.events.push(new SimEvent(simulatorViewModel.time + skill.animationDuration, skill, SimEventType.AnimationFinished));\r\n\r\n            var expectedTimestamp = simulatorViewModel.dragoon.TrueThrust.animationDuration;\r\n            var expectedSimEventType = SimEventType.AnimationFinished;\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, expectedTimestamp);\r\n            assert.equal(simulatorViewModel.events[0].eventType, expectedSimEventType);\r\n            assert.equal(simulatorViewModel.events.length, 1);\r\n        });\r\n\r\n        QUnit.test(\"determinePositionInSimEvents - 0 events in the list \", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.TrueThrust;\r\n\r\n            var actual = simulatorViewModel.determinePositionInSimEvents(new SimEvent(simulatorViewModel.time + skill.animationDuration, skill, SimEventType.AnimationFinished));\r\n\r\n            assert.equal(actual, 0);\r\n        });\r\n\r\n        QUnit.test(\"determinePositionInSimEvents - 4 DoT tick events in the list - add animation event at index = 1 \", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.TrueThrust;\r\n\r\n            simulatorViewModel.events.push(new SimEvent(500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(3500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(6500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(9500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n\r\n\r\n            var actual = simulatorViewModel.determinePositionInSimEvents(new SimEvent(1300, skill, SimEventType.AnimationFinished));\r\n\r\n            assert.equal(actual, 1);\r\n        });\r\n\r\n        QUnit.test(\"determinePositionInSimEvents - 8 DoT tick events in the list - add animation event at index = 7 \", function (assert) {\r\n            // Realistically, the animation event would never happen after 7 dot events, but this is just for testing purposes.\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.TrueThrust;\r\n\r\n            simulatorViewModel.events.push(new SimEvent(500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(3500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(6500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(9500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(12500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(15500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(18500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(21500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n\r\n            var actual = simulatorViewModel.determinePositionInSimEvents(new SimEvent(19300, skill, SimEventType.AnimationFinished));\r\n\r\n            assert.equal(actual, 7);\r\n        });\r\n\r\n        QUnit.test(\"determinePositionInSimEvents - testing the splice method \", function (assert) {\r\n            // Realistically, the animation event would never happen after 7 dot events, but this is just for testing purposes.\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.TrueThrust;\r\n\r\n            simulatorViewModel.events.push(new SimEvent(500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(1500, simulatorViewModel.dragoon.TrueThrust, SimEventType.AnimationFinished));\r\n            simulatorViewModel.events.push(new SimEvent(7500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n\r\n            var mockEvent: ISimEvent = new SimEvent(4500, skill, SimEventType.AnimationFinished);\r\n\r\n            simulatorViewModel.events.splice(2, 0, mockEvent);\r\n\r\n            var actual: number = 0;\r\n            simulatorViewModel.events.forEach((value, index) => {\r\n                if (value.timestamp === 4500) {\r\n                    actual = index;\r\n                }\r\n            });\r\n\r\n            assert.equal(actual, 2);\r\n\r\n        });\r\n\r\n        QUnit.test(\"determinePositionInSimEvents - Call the method 3 times with 1 animation event and 3 dot tick events preexisting in collection \", function (assert) {\r\n            // Realistically, the animation event would never happen after 7 dot events, but this is just for testing purposes.\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.TrueThrust;\r\n\r\n            simulatorViewModel.events.push(new SimEvent(500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(1500, simulatorViewModel.dragoon.TrueThrust, SimEventType.AnimationFinished));\r\n            simulatorViewModel.events.push(new SimEvent(3500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(9500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n\r\n            var mockEvent5: ISimEvent = new SimEvent(6500, skill, SimEventType.AnimationFinished);\r\n            var mockEvent6: ISimEvent = new SimEvent(12500, skill, SimEventType.AnimationFinished);\r\n            var mockEvent7: ISimEvent = new SimEvent(15500, skill, SimEventType.AnimationFinished);\r\n\r\n            var actual1 = simulatorViewModel.determinePositionInSimEvents(mockEvent5);\r\n            simulatorViewModel.events.splice(3, 0, mockEvent5);\r\n\r\n            var actual2 = simulatorViewModel.determinePositionInSimEvents(mockEvent6);\r\n            simulatorViewModel.events.push(mockEvent6);\r\n\r\n            var actual3 = simulatorViewModel.determinePositionInSimEvents(mockEvent7);\r\n            simulatorViewModel.events.push(mockEvent7);\r\n\r\n            assert.equal(actual1, 3);\r\n            assert.equal(actual2, 5);\r\n            assert.equal(actual3, 6);\r\n\r\n        });\r\n\r\n        QUnit.test(\"determinePositionInSimEvents - 4 DoT tick events in the list - add animation event at many different indexes \", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.TrueThrust;\r\n\r\n            simulatorViewModel.events.push(new SimEvent(500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(3500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(6500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n            simulatorViewModel.events.push(new SimEvent(9500, simulatorViewModel.dragoon.Phlebotomize, SimEventType.DotTick));\r\n\r\n\r\n            var actual1 = simulatorViewModel.determinePositionInSimEvents(new SimEvent(0, skill, SimEventType.AnimationFinished));\r\n            var actual2 = simulatorViewModel.determinePositionInSimEvents(new SimEvent(200, skill, SimEventType.AnimationFinished));\r\n            var actual3 = simulatorViewModel.determinePositionInSimEvents(new SimEvent(1300, skill, SimEventType.AnimationFinished));\r\n            var actual4 = simulatorViewModel.determinePositionInSimEvents(new SimEvent(3500, skill, SimEventType.AnimationFinished));\r\n            var actual5 = simulatorViewModel.determinePositionInSimEvents(new SimEvent(6000, skill, SimEventType.AnimationFinished));\r\n            var actual6 = simulatorViewModel.determinePositionInSimEvents(new SimEvent(10000, skill, SimEventType.AnimationFinished));\r\n\r\n\r\n            assert.equal(actual1, 0);\r\n            assert.equal(actual2, 0);\r\n            assert.equal(actual3, 1);\r\n            assert.equal(actual4, 2);\r\n            assert.equal(actual5, 2);\r\n            assert.equal(actual6, 4);\r\n        });\r\n\r\n        // THIS NEEDS TO BE REVISED. I WAS TOLD THAT THERE IS A GLOBAL DOT TICK. TICKS DONT START AFTER ANIMATION ENDS\r\n        //QUnit.test(\"DoTs start after animation finishes: phlebotomoze \", function (assert) {\r\n        //    var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n        //    var skill = simulatorViewModel.dragoon.Phlebotomize;\r\n        //    simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n\r\n        //    simulatorViewModel.advanceTime(3000);\r\n\r\n        //    assert.equal(simulatorViewModel.damageLog.length, 2);\r\n        //    assert.equal(simulatorViewModel.damageLog[1].time, 4300);\r\n\r\n        //    assert.equal(simulatorViewModel.events.length, 7);\r\n        //    assert.equal(simulatorViewModel.events[0].timestamp, 4300 + 3000);\r\n        //    assert.equal(simulatorViewModel.events[6].timestamp, 4300 + 21000);\r\n\r\n        //});\r\n\r\n        QUnit.test(\"Opening with: phlebotomoze \", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.Phlebotomize;\r\n            simulatorViewModel.events.push(new SimEvent(simulatorViewModel.time + skill.animationDuration, skill, SimEventType.AnimationFinished));\r\n\r\n            var expectedSimEventType = SimEventType.AnimationFinished;\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 1300);\r\n            assert.equal(simulatorViewModel.events[0].eventType, expectedSimEventType);\r\n            assert.equal(simulatorViewModel.events.length, 1);\r\n        });\r\n\r\n        QUnit.test(\"Activate phlebotomize and true thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var phlebotomize = simulatorViewModel.dragoon.Phlebotomize;\r\n            var vorpalThrust = simulatorViewModel.dragoon.VorpalThrust;\r\n\r\n            simulatorViewModel.activateSkill(phlebotomize);\r\n            simulatorViewModel.activateSkill(vorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.time, 3800);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 5000);\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 6000);\r\n            assert.equal(simulatorViewModel.events[2].timestamp, 9000);\r\n            assert.equal(simulatorViewModel.events[3].timestamp, 12000);\r\n            assert.equal(simulatorViewModel.events[4].timestamp, 15000);\r\n            assert.equal(simulatorViewModel.events[5].timestamp, 18000);\r\n            assert.equal(simulatorViewModel.events[6].timestamp, 21000);\r\n            assert.equal(simulatorViewModel.events[7].timestamp, 24000);\r\n            assert.equal(simulatorViewModel.events[8].timestamp, 25300);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[2].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[3].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[4].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[5].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[6].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[7].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[8].eventType, SimEventType.DotEnd);\r\n        });\r\n\r\n        QUnit.test(\"Activate True Thrust, phlebotomize, and true thrust again \", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var phlebotomize = simulatorViewModel.dragoon.Phlebotomize;\r\n            var vorpalThrust = simulatorViewModel.dragoon.VorpalThrust;\r\n\r\n            simulatorViewModel.activateSkill(vorpalThrust);\r\n            simulatorViewModel.activateSkill(phlebotomize);\r\n            simulatorViewModel.activateSkill(vorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.time, 6300);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 7500);\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 9000);\r\n            assert.equal(simulatorViewModel.events[2].timestamp, 12000);\r\n            assert.equal(simulatorViewModel.events[3].timestamp, 15000);\r\n            assert.equal(simulatorViewModel.events[4].timestamp, 18000);\r\n            assert.equal(simulatorViewModel.events[5].timestamp, 21000);\r\n            assert.equal(simulatorViewModel.events[6].timestamp, 24000);\r\n            assert.equal(simulatorViewModel.events[7].timestamp, 27000);\r\n            assert.equal(simulatorViewModel.events[8].timestamp, 27800);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[2].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[3].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[4].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[5].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[6].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[7].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[8].eventType, SimEventType.DotEnd);\r\n        });\r\n\r\n        QUnit.test(\"Activate True Thrust, Vorpal Thrust, and Full Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var vorpalThrust = simulatorViewModel.dragoon.VorpalThrust;\r\n            var fullThrust = simulatorViewModel.dragoon.FullThrust;\r\n\r\n            simulatorViewModel.activateSkill(vorpalThrust);\r\n            simulatorViewModel.activateSkill(vorpalThrust);\r\n            simulatorViewModel.activateSkill(fullThrust);\r\n\r\n            assert.equal(simulatorViewModel.time, 6300);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 7500);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n        });\r\n\r\n        QUnit.test(\"Activate phlebotomize twice in a row\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var phlebotomize = simulatorViewModel.dragoon.Phlebotomize;\r\n\r\n            simulatorViewModel.activateSkill(phlebotomize);\r\n\r\n            assert.equal(simulatorViewModel.time, 1300);\r\n\r\n            // Phlebotomize #1\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 2500);\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 3000);\r\n            assert.equal(simulatorViewModel.events[2].timestamp, 6000);\r\n            assert.equal(simulatorViewModel.events[3].timestamp, 9000);\r\n            assert.equal(simulatorViewModel.events[4].timestamp, 12000);\r\n            assert.equal(simulatorViewModel.events[5].timestamp, 15000);\r\n            assert.equal(simulatorViewModel.events[6].timestamp, 18000);\r\n            assert.equal(simulatorViewModel.events[7].timestamp, 21000);\r\n            assert.equal(simulatorViewModel.events[8].timestamp, 24000);\r\n            assert.equal(simulatorViewModel.events[9].timestamp, 25300);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[2].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[3].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[4].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[5].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[6].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[7].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[8].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[9].eventType, SimEventType.DotEnd);\r\n\r\n            // phlebotomize #2\r\n            simulatorViewModel.activateSkill(phlebotomize);\r\n\r\n            assert.equal(simulatorViewModel.time, 3800);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 5000);\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 6000);\r\n            assert.equal(simulatorViewModel.events[2].timestamp, 9000);\r\n            assert.equal(simulatorViewModel.events[3].timestamp, 12000);\r\n            assert.equal(simulatorViewModel.events[4].timestamp, 15000);\r\n            assert.equal(simulatorViewModel.events[5].timestamp, 18000);\r\n            assert.equal(simulatorViewModel.events[6].timestamp, 21000);\r\n            assert.equal(simulatorViewModel.events[7].timestamp, 24000);\r\n            assert.equal(simulatorViewModel.events[8].timestamp, 27000);\r\n            assert.equal(simulatorViewModel.events[9].timestamp, 27800);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[2].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[3].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[4].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[5].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[6].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[7].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[8].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[9].eventType, SimEventType.DotEnd);\r\n        });\r\n\r\n        QUnit.test(\"Creating all necessary events - phlebotomoze - 8 DoT ticks, 1 DoT end, 1 global cooldown\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill: ISkill = simulatorViewModel.dragoon.Phlebotomize;\r\n            var phlebotomizeAnimationEndEvent = new SimEvent(skill.animationDuration, skill, SimEventType.AnimationFinished);\r\n            simulatorViewModel.time = simulatorViewModel.dragoon.Phlebotomize.animationDuration;\r\n            simulatorViewModel.events.push(phlebotomizeAnimationEndEvent);\r\n\r\n            // This next call will destroy the animation event, and should create 10 events: 8 DoT ticks, 1 dot end, 1 global cooldown. \r\n            simulatorViewModel.processNextSimEvent();\r\n\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 2500);\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            // Dot tick timestamps and event types\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 3000);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[2].timestamp, 6000);\r\n            assert.equal(simulatorViewModel.events[2].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[3].timestamp, 9000);\r\n            assert.equal(simulatorViewModel.events[3].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[4].timestamp, 12000);\r\n            assert.equal(simulatorViewModel.events[4].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[5].timestamp, 15000);\r\n            assert.equal(simulatorViewModel.events[5].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[6].timestamp, 18000);\r\n            assert.equal(simulatorViewModel.events[6].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[7].timestamp, 21000);\r\n            assert.equal(simulatorViewModel.events[7].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[8].timestamp, 24000);\r\n            assert.equal(simulatorViewModel.events[8].eventType, SimEventType.DotTick);\r\n\r\n            // DoT end event timestamp\r\n            assert.equal(simulatorViewModel.events[9].timestamp, 25300);\r\n            assert.equal(simulatorViewModel.events[9].eventType, SimEventType.DotEnd);\r\n\r\n            assert.equal(simulatorViewModel.events.length, 10);\r\n        });\r\n\r\n        QUnit.test(\"Calculating the next dot timestamp for multiple values\", function (assert) {\r\n\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var actual: number = 0;\r\n\r\n            simulatorViewModel.time = 1200;\r\n            actual = simulatorViewModel.calculateNextDotEventTimestamp();\r\n\r\n            assert.equal(actual, 3000);\r\n\r\n            simulatorViewModel.time = 2400;\r\n            actual = simulatorViewModel.calculateNextDotEventTimestamp();\r\n\r\n            assert.equal(actual, 3000);\r\n\r\n            simulatorViewModel.time = 11000;\r\n            actual = simulatorViewModel.calculateNextDotEventTimestamp();\r\n\r\n            assert.equal(actual, 12000);\r\n\r\n            simulatorViewModel.time = 31000;\r\n            actual = simulatorViewModel.calculateNextDotEventTimestamp();\r\n\r\n            assert.equal(actual, 33000);\r\n\r\n            simulatorViewModel.time = 40000;\r\n            actual = simulatorViewModel.calculateNextDotEventTimestamp();\r\n\r\n            assert.equal(actual, 42000);\r\n\r\n            simulatorViewModel.time = 44000;\r\n            actual = simulatorViewModel.calculateNextDotEventTimestamp();\r\n\r\n            assert.equal(actual, 45000);\r\n        });\r\n\r\n        QUnit.test(\"Opening with: Jump \", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.Jump;\r\n\r\n            simulatorViewModel.activateSkill(skill);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 30000);\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.Cooldown);\r\n            assert.equal(simulatorViewModel.events.length, 1);\r\n        });\r\n\r\n        QUnit.test(\"Cant activate Jump twice in a row \", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.Jump;\r\n\r\n            simulatorViewModel.activateSkill(skill);\r\n            simulatorViewModel.activateSkill(skill);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 30000);\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.Cooldown);\r\n            assert.equal(simulatorViewModel.events.length, 1);\r\n        });\r\n\r\n        QUnit.test(\"Cant activate Jump twice in a row - advancing time 29 seconds\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var skill = simulatorViewModel.dragoon.Jump;\r\n\r\n            simulatorViewModel.activateSkill(skill);\r\n            simulatorViewModel.time = 29000;\r\n            simulatorViewModel.activateSkill(skill);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 30000);\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.Cooldown);\r\n            assert.equal(simulatorViewModel.events.length, 1);\r\n        });\r\n\r\n        QUnit.test(\"Activate Jump, True Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var jump = simulatorViewModel.dragoon.Jump;\r\n            var vorpalThrust = simulatorViewModel.dragoon.VorpalThrust;\r\n\r\n\r\n            simulatorViewModel.activateSkill(jump);\r\n            simulatorViewModel.activateSkill(vorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 3800);\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 30000);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.Cooldown);\r\n            assert.equal(simulatorViewModel.events.length, 2);\r\n        });\r\n\r\n        QUnit.test(\"Activate Jump, True Thrust, then Jump again\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var jump = simulatorViewModel.dragoon.Jump;\r\n            var vorpalThrust = simulatorViewModel.dragoon.VorpalThrust;\r\n\r\n            simulatorViewModel.activateSkill(jump);\r\n            simulatorViewModel.activateSkill(vorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 3800);\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 30000);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.Cooldown);\r\n            assert.equal(simulatorViewModel.events.length, 2);\r\n        });\r\n\r\n        QUnit.test(\"Activate Jump, Phlebotomize\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var jump = simulatorViewModel.dragoon.Jump;\r\n            var phlebotomize = simulatorViewModel.dragoon.Phlebotomize;\r\n\r\n            simulatorViewModel.activateSkill(jump);\r\n            simulatorViewModel.activateSkill(phlebotomize);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 3000);\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 3800);\r\n            assert.equal(simulatorViewModel.events[2].timestamp, 6000);\r\n            assert.equal(simulatorViewModel.events[3].timestamp, 9000);\r\n            assert.equal(simulatorViewModel.events[4].timestamp, 12000);\r\n            assert.equal(simulatorViewModel.events[5].timestamp, 15000);\r\n            assert.equal(simulatorViewModel.events[6].timestamp, 18000);\r\n            assert.equal(simulatorViewModel.events[7].timestamp, 21000);\r\n            assert.equal(simulatorViewModel.events[8].timestamp, 24000);\r\n            assert.equal(simulatorViewModel.events[9].timestamp, 26600);\r\n            assert.equal(simulatorViewModel.events[10].timestamp, 30000);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[2].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[3].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[4].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[5].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[6].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[7].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[8].eventType, SimEventType.DotTick);\r\n            assert.equal(simulatorViewModel.events[9].eventType, SimEventType.DotEnd);\r\n            assert.equal(simulatorViewModel.events[10].eventType, SimEventType.Cooldown);\r\n\r\n            assert.equal(simulatorViewModel.time, 2600);\r\n            assert.equal(simulatorViewModel.events.length, 11);\r\n        });\r\n\r\n        QUnit.test(\"Test timing of GCD, ability, CGD - Activate True Thrust, Jump, True Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Jump);\r\n\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 5100);\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 31300);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.Cooldown);\r\n            assert.equal(simulatorViewModel.time, 3900);\r\n            assert.equal(simulatorViewModel.events.length, 2);\r\n        });\r\n\r\n        QUnit.test(\"skillsOnCooldown contains jump after activating skill\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var jump = simulatorViewModel.dragoon.Jump;\r\n\r\n            simulatorViewModel.activateSkill(jump);\r\n\r\n            assert.equal(simulatorViewModel.skillsOnCooldown[0].name, \"Jump\");\r\n            assert.equal(simulatorViewModel.skillsOnCooldown[0].endTime, 31300);\r\n        });\r\n\r\n        QUnit.test(\"skillsOnCooldown contains DragonFireDive after activating skill\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var dfd = simulatorViewModel.dragoon.DragonfireDive;\r\n\r\n            simulatorViewModel.activateSkill(dfd);\r\n\r\n            assert.equal(simulatorViewModel.skillsOnCooldown[0].name, \"DragonfireDive\");\r\n            assert.equal(simulatorViewModel.skillsOnCooldown[0].endTime, 121300);\r\n        });\r\n\r\n        QUnit.test(\"skillsOnCooldown contains jump only once after activating skill twice\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var jump = simulatorViewModel.dragoon.Jump;\r\n\r\n            simulatorViewModel.activateSkill(jump);\r\n            simulatorViewModel.activateSkill(jump);\r\n\r\n            assert.equal(simulatorViewModel.skillsOnCooldown[0].name, \"Jump\");\r\n            assert.equal(simulatorViewModel.skillsOnCooldown[0].endTime, 31300);\r\n            assert.equal(simulatorViewModel.skillsOnCooldown.length, 1);\r\n        });\r\n\r\n        QUnit.test(\"activeDots contains phlebotomize after activating skill\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var phlebotomize = simulatorViewModel.dragoon.Phlebotomize;\r\n\r\n            simulatorViewModel.activateSkill(phlebotomize);\r\n\r\n            assert.equal(simulatorViewModel.activeDots[0].skill.id, \"Phlebotomize\");\r\n            assert.equal(simulatorViewModel.activeDots.length, 1);\r\n        });\r\n\r\n        QUnit.test(\"activeBuffs contains life surge after activating skill\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var lifeSurge = simulatorViewModel.dragoon.LifeSurge;\r\n\r\n            simulatorViewModel.activateSkill(lifeSurge);\r\n\r\n            assert.equal(simulatorViewModel.activeBuffs[0].skill.id, \"LifeSurge\");\r\n            assert.equal(simulatorViewModel.activeBuffs.length, 1);\r\n        });\r\n\r\n        QUnit.test(\"skillsOnCooldown is empty after advancing time\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var jump = simulatorViewModel.dragoon.Jump;\r\n\r\n            simulatorViewModel.activateSkill(jump);\r\n            simulatorViewModel.advanceTime(500000);\r\n\r\n            assert.equal(simulatorViewModel.skillsOnCooldown.length, 0);\r\n        });\r\n\r\n        QUnit.test(\"activeDots is empty after advancing time\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var phlebotomize = simulatorViewModel.dragoon.Phlebotomize;\r\n\r\n            simulatorViewModel.activateSkill(phlebotomize);\r\n            simulatorViewModel.advanceTime(500000);\r\n\r\n            assert.equal(simulatorViewModel.activeDots.length, 0);\r\n        });\r\n\r\n        QUnit.test(\"activeBuffs is empty after advancing time\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            var lifeSurge = simulatorViewModel.dragoon.LifeSurge;\r\n\r\n            simulatorViewModel.activateSkill(lifeSurge);\r\n            simulatorViewModel.advanceTime(500000);\r\n\r\n            assert.equal(simulatorViewModel.activeBuffs.length, 0);\r\n        });\r\n\r\n        //QUnit.test(\"activeSkills has 2 skills after advancing short time - phlebotomize, heavy thrust\", function (assert) {\r\n        //    var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n\r\n        //    simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n        //    simulatorViewModel.activateSkill(simulatorViewModel.dragoon.HeavyThrust);\r\n\r\n        //    simulatorViewModel.advanceTime(5000);\r\n\r\n        //    assert.equal(simulatorViewModel.activeSkills.length, 2);\r\n        //});\r\n\r\n        //QUnit.test(\"activeSkills has 2 skills after advancing short time - jump, spineshatter dive\", function (assert) {\r\n        //    var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n\r\n        //    simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Jump);\r\n        //    simulatorViewModel.activateSkill(simulatorViewModel.dragoon.SpineshatterDive);\r\n\r\n        //    simulatorViewModel.advanceTime(5000);\r\n\r\n        //    assert.equal(simulatorViewModel.skillsOnCooldown.length, 2);\r\n        //});\r\n\r\n        QUnit.test(\"Testing damage: True Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 1);\r\n            assert.equal(simulatorViewModel.damageLog[0].totalDamage, 150);\r\n        });\r\n\r\n        QUnit.test(\"Testing damage: True Thrust x5\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 5);\r\n            assert.equal(simulatorViewModel.damageLog[0].totalDamage, 150);\r\n            assert.equal(simulatorViewModel.damageLog[1].totalDamage, 150);\r\n            assert.equal(simulatorViewModel.damageLog[2].totalDamage, 150);\r\n            assert.equal(simulatorViewModel.damageLog[3].totalDamage, 150);\r\n            assert.equal(simulatorViewModel.damageLog[4].totalDamage, 150);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 750);\r\n        });\r\n\r\n        QUnit.test(\"Testing damage: Phlebotomize\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 9);\r\n            assert.equal(simulatorViewModel.damageLog[0].totalDamage, 170);\r\n            assert.equal(simulatorViewModel.damageLog[1].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[2].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[3].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[4].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[5].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[6].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[7].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[8].totalDamage, 30);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 410);\r\n        });\r\n\r\n        QUnit.test(\"Testing damage: Phlebotomize, true thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 10);\r\n            assert.equal(simulatorViewModel.damageLog[0].totalDamage, 170);\r\n            assert.equal(simulatorViewModel.damageLog[1].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[2].totalDamage, 150);\r\n            assert.equal(simulatorViewModel.damageLog[3].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[4].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[5].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[6].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[7].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[8].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[9].totalDamage, 30);\r\n\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 560);\r\n        });\r\n\r\n        QUnit.test(\"Testing damage: true thrust, Phlebotomize\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 10);\r\n            assert.equal(simulatorViewModel.damageLog[0].totalDamage, 150);\r\n            assert.equal(simulatorViewModel.damageLog[1].totalDamage, 170);\r\n            assert.equal(simulatorViewModel.damageLog[2].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[3].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[4].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[5].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[6].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[7].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[8].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[9].totalDamage, 30);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 560);\r\n        });\r\n\r\n        QUnit.test(\"Testing damage: Phlebotomize, true thrust, jump\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Jump);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 11);\r\n\r\n            assert.equal(simulatorViewModel.damageLog[0].totalDamage, 170);\r\n            assert.equal(simulatorViewModel.damageLog[1].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[2].totalDamage, 150);\r\n            assert.equal(simulatorViewModel.damageLog[3].totalDamage, 200);\r\n            assert.equal(simulatorViewModel.damageLog[4].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[5].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[6].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[7].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[8].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[9].totalDamage, 30);\r\n            assert.equal(simulatorViewModel.damageLog[10].totalDamage, 30);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 760);\r\n        });\r\n\r\n        QUnit.test(\"Testing buffed damage: blood for blood, true thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 1);\r\n\r\n            assert.equal(simulatorViewModel.damageLog[0].totalDamage, 195);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 195);\r\n        });\r\n\r\n        QUnit.test(\"Testing buffed damage: blood for blood, phlebotomize\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 9);\r\n\r\n            assert.equal(simulatorViewModel.damageLog[0].totalDamage, 221);\r\n            assert.equal(simulatorViewModel.damageLog[1].totalDamage, 39);\r\n            assert.equal(simulatorViewModel.damageLog[2].totalDamage, 39);\r\n            assert.equal(simulatorViewModel.damageLog[3].totalDamage, 39);\r\n            assert.equal(simulatorViewModel.damageLog[4].totalDamage, 39);\r\n            assert.equal(simulatorViewModel.damageLog[5].totalDamage, 39);\r\n            assert.equal(simulatorViewModel.damageLog[6].totalDamage, 39);\r\n            assert.equal(simulatorViewModel.damageLog[7].totalDamage, 39);\r\n            assert.equal(simulatorViewModel.damageLog[8].totalDamage, 39);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 533);\r\n        });\r\n\r\n        QUnit.test(\"Testing buffed damage (total only): blood for blood, phlebotomize, true thrust, jump, spineshatter dive, true thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Jump);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.SpineshatterDive);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 13);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 1404);\r\n        });\r\n\r\n        QUnit.test(\"Testing buffed damage (total only): blood for blood, heavy thrust, true thrust, jump\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.HeavyThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Jump);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 3);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 728.5);\r\n        });\r\n\r\n        QUnit.test(\"Testing damage after buff runs out: blood for blood, true thrust, (buff end) true thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 2);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 345);\r\n        });\r\n\r\n        QUnit.test(\"Testing damage after buff runs out, and buff activates again: blood for blood, true thrust, (buff end), (cooldown end), blood for blood true thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            simulatorViewModel.advanceTime(500000);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 2);\r\n\r\n            assert.equal(simulatorViewModel.totalPotency, 390);\r\n        });\r\n\r\n        QUnit.test(\"Testing chain end event creation: True Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            assert.equal(simulatorViewModel.events.length, 2);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.ChainEnd);\r\n\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 6300);\r\n        });\r\n\r\n        QUnit.test(\"Testing chain end event creation: True Thrust, Vorpal Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.events.length, 2);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.ChainEnd);\r\n\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 8800);\r\n        });\r\n\r\n        QUnit.test(\"Testing chain end event creation: True Thrust, Vorpal Thrust, Full Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.FullThrust);\r\n\r\n            assert.equal(simulatorViewModel.events.length, 2);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.ChainEnd);\r\n\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 11300);\r\n        });\r\n\r\n        QUnit.test(\"Testing breaking a chain does not continue chain: True Thrust, Full Thrust, Vorpal Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.FullThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.events.length, 1);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 7500);\r\n        });\r\n\r\n        QUnit.test(\"Testing breaking and restarting a chain : True Thrust, Full Thrust, True Thrust, Vorpal Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.FullThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.events.length, 2);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.ChainEnd);\r\n\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 13800);\r\n        });\r\n\r\n        QUnit.test(\"Testing starting a chain twice: True Thrust, True Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            assert.equal(simulatorViewModel.events.length, 2);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n            assert.equal(simulatorViewModel.events[1].eventType, SimEventType.ChainEnd);\r\n\r\n            assert.equal(simulatorViewModel.events[1].timestamp, 8800);\r\n        });\r\n\r\n        QUnit.test(\"Testing chain: True Thrust, Vorpal Thrust, Vorpal Thurst\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.events.length, 1);\r\n\r\n            assert.equal(simulatorViewModel.events[0].eventType, SimEventType.GlobalCooldown);\r\n\r\n            assert.equal(simulatorViewModel.events[0].timestamp, 7500);\r\n        });\r\n\r\n        QUnit.test(\"Testing chain damage: True Thrust, Vorpal Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 2);\r\n            assert.equal(simulatorViewModel.damageLog[1].totalDamage, 200);\r\n            assert.equal(simulatorViewModel.totalPotency, 350);\r\n        });\r\n\r\n        QUnit.test(\"Testing chain damage: True Thrust, Vorpal Thrust, Full Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.FullThrust);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 3);\r\n            assert.equal(simulatorViewModel.damageLog[2].totalDamage, 360);\r\n            assert.equal(simulatorViewModel.totalPotency, 710);\r\n        });\r\n\r\n        QUnit.test(\"Testing chain damage (WITHOUT DOTS): Impulse Drive, Disembowel, Chaos Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ImpulseDrive);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Disembowel);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ChaosThrust);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 3);\r\n            assert.equal(simulatorViewModel.damageLog[2].totalDamage, 275);\r\n            assert.equal(simulatorViewModel.totalPotency, 180 + 220 + 275);\r\n        });\r\n\r\n        QUnit.test(\"Testing chain damage (WITH DOTS): Impulse Drive, Disembowel, Chaos Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ImpulseDrive);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Disembowel);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ChaosThrust);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 13);\r\n            assert.equal(simulatorViewModel.totalPotency, 180 + 220 + 275 + 385);\r\n        });\r\n\r\n        QUnit.test(\"Testing buffed chain damage (WITH DOTS): Impulse Drive, Disembowel, Blood for Blood, Chaos Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ImpulseDrive);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Disembowel);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ChaosThrust);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 13);\r\n            assert.equal(simulatorViewModel.totalPotency, 180 + 220 + 250 + 25 + 75 + 350 + 35 + 105);\r\n        });\r\n\r\n        QUnit.test(\"Testing buffed chain damage (WITH DOTS):  Blood for Blood, Impulse Drive, Disembowel, Chaos Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ImpulseDrive);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Disembowel);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ChaosThrust);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 13);\r\n            assert.equal(simulatorViewModel.totalPotency, 180 + 54 + 220 + 66 + 250 + 25 + 75 + 350 + 35 + 105);\r\n        });\r\n\r\n        QUnit.test(\"Testing multiple buffs on chain damage: Blood for blood, Heavy Thrust, True Thrust, Vorpal Thrust, Full Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.BloodForBlood);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.HeavyThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.FullThrust);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 4);\r\n            assert.equal(simulatorViewModel.totalPotency, 170 + 51 + 150 + 67.5 + 200 + 90 + 360 + 162);\r\n        });\r\n\r\n        QUnit.test(\"Chaos Thrust should have no dots unless it followed chain\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ChaosThrust);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 1);\r\n            assert.equal(simulatorViewModel.totalPotency, 150);\r\n        });\r\n\r\n        QUnit.test(\"Dots should not be created: Disembowel, Chaos Thrust\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Disembowel);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ChaosThrust);\r\n\r\n            simulatorViewModel.advanceTime(50000);\r\n\r\n            assert.equal(simulatorViewModel.damageLog.length, 2);\r\n            assert.equal(simulatorViewModel.totalPotency, 100 + 150);\r\n        });\r\n\r\n        QUnit.test(\"PPSLog: True Thrust x3\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            assert.equal(simulatorViewModel.ppsLog.length, 3);\r\n            assert.equal(simulatorViewModel.ppsLog[0].pps, 115.38);\r\n            assert.equal(simulatorViewModel.ppsLog[0].time, 1300);\r\n            assert.equal(simulatorViewModel.ppsLog[1].pps, 78.94);\r\n            assert.equal(simulatorViewModel.ppsLog[1].time, 3800);\r\n            assert.equal(simulatorViewModel.ppsLog[2].pps, 71.42);\r\n            assert.equal(simulatorViewModel.ppsLog[2].time, 6300);\r\n        });\r\n\r\n        QUnit.test(\"PPSLog: True Thrust Combo\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.FullThrust);\r\n\r\n            assert.equal(simulatorViewModel.ppsLog.length, 3);\r\n            assert.equal(simulatorViewModel.ppsLog[0].pps, 115.38);\r\n            assert.equal(simulatorViewModel.ppsLog[0].time, 1300);\r\n            assert.equal(simulatorViewModel.ppsLog[1].pps, 92.10);\r\n            assert.equal(simulatorViewModel.ppsLog[1].time, 3800);\r\n            assert.equal(simulatorViewModel.ppsLog[2].pps, 112.69);\r\n            assert.equal(simulatorViewModel.ppsLog[2].time, 6300);\r\n        });\r\n\r\n        // THIS IS ODD BECAUSE OF THE GLOBAL DOT TICKS\r\n        QUnit.test(\"PPSLog: Phlebotomize full dot\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n            simulatorViewModel.advanceTime(25300);\r\n\r\n            assert.equal(simulatorViewModel.ppsLog.length, 9);\r\n            assert.equal(simulatorViewModel.ppsLog[0].pps, 130.76);\r\n            assert.equal(simulatorViewModel.ppsLog[0].time, 1300);\r\n            assert.equal(simulatorViewModel.ppsLog[8].pps, 17.08);\r\n            assert.equal(simulatorViewModel.ppsLog[8].time, 24000);\r\n        });\r\n\r\n        // THIS IS ODD BECAUSE OF THE GLOBAL DOT TICKS\r\n        QUnit.test(\"PPSLog: Phlebotomize, True Thrust x2\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Phlebotomize);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            assert.equal(simulatorViewModel.ppsLog.length, 5);\r\n            assert.equal(simulatorViewModel.ppsLog[0].pps, 130.76);\r\n            assert.equal(simulatorViewModel.ppsLog[0].time, 1300);\r\n            assert.equal(simulatorViewModel.ppsLog[2].pps, 92.10);\r\n            assert.equal(simulatorViewModel.ppsLog[2].time, 3800);\r\n            assert.equal(simulatorViewModel.ppsLog[4].pps, 84.12);\r\n            assert.equal(simulatorViewModel.ppsLog[4].time, 6300);\r\n        });\r\n\r\n        // START - Reset tests\r\n        QUnit.test(\"Reset - PPSLog: True Thrust x3\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.FullThrust);\r\n\r\n            simulatorViewModel.reset();\r\n\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            assert.equal(simulatorViewModel.ppsLog.length, 3);\r\n            assert.equal(simulatorViewModel.ppsLog[0].pps, 115.38);\r\n            assert.equal(simulatorViewModel.ppsLog[0].time, 1300);\r\n            assert.equal(simulatorViewModel.ppsLog[1].pps, 78.94);\r\n            assert.equal(simulatorViewModel.ppsLog[1].time, 3800);\r\n            assert.equal(simulatorViewModel.ppsLog[2].pps, 71.42);\r\n            assert.equal(simulatorViewModel.ppsLog[2].time, 6300);\r\n        });\r\n        // END - Reset tests\r\n\r\n        QUnit.test(\"Bug where CT dot damage happens WAY in the future\", function (assert) {\r\n            var simulatorViewModel: BaseSimulator = new BaseSimulator();\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.VorpalThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.FullThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ImpulseDrive);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.Disembowel);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.ChaosThrust);\r\n            simulatorViewModel.activateSkill(simulatorViewModel.dragoon.TrueThrust);\r\n\r\n            // True Thrust Combo\r\n            assert.equal(simulatorViewModel.ppsLog[0].pps, 115.38);\r\n            assert.equal(simulatorViewModel.ppsLog[0].time, 1300);\r\n            assert.equal(simulatorViewModel.ppsLog[1].pps, 92.10);\r\n            assert.equal(simulatorViewModel.ppsLog[1].time, 3800);\r\n            assert.equal(simulatorViewModel.ppsLog[2].pps, 112.69);\r\n            assert.equal(simulatorViewModel.ppsLog[2].time, 6300);\r\n\r\n            assert.equal(simulatorViewModel.ppsLog[3].pps, 101.13);\r\n            assert.equal(simulatorViewModel.ppsLog[3].time, 8800);\r\n            assert.equal(simulatorViewModel.ppsLog[4].pps, 98.23);\r\n            assert.equal(simulatorViewModel.ppsLog[4].time, 11300);\r\n            assert.equal(simulatorViewModel.ppsLog[5].pps, 100.36);\r\n            assert.equal(simulatorViewModel.ppsLog[5].time, 13800);\r\n\r\n\r\n            assert.equal(simulatorViewModel.ppsLog[6].pps, 94.9); \r\n            assert.equal(simulatorViewModel.ppsLog[6].time, 15000);\r\n\r\n            assert.equal(simulatorViewModel.ppsLog[7].pps, 97.45); \r\n            assert.equal(simulatorViewModel.ppsLog[7].time, 16300);\r\n        });\r\n    }\r\n}\r\n\r\n// write unit tests for import and export features. ","enum DamageTypes {\r\n    Slashing,\r\n    Piercing,\r\n    Magical\r\n} ","import { BaseSimulator } from './BaseSimulator';\r\nimport { SimEvent } from './SimEvent';\r\n\r\nexport class DragoonSimulator extends BaseSimulator {\r\n\r\n    determineIfBuffShouldBeRemoved(event: ISimEvent, skillName: string): boolean {\r\n\r\n        if (skillName === \"PowerSurge\" && event.eventType === SimEventType.AnimationFinished && (event.skill.id === \"Jump\" || event.skill.id === \"SpineshatterDive\")) {\r\n            return true;\r\n        }\r\n\r\n        if (skillName === \"LifeSurge\" && event.eventType === SimEventType.AnimationFinished && event.skill.skillType === SkillTypes.WeaponSkill) {\r\n            return true;\r\n        }\r\n\r\n        // TODO this would be a good place to evaluate if the blood of the dragon buff should fall off\r\n\r\n        return false;\r\n    }\r\n\r\n    determineIfBuffCanBeApplied(skill: ISkill, buffName: string): boolean {\r\n        if (buffName === \"LifeSurge\" && (skill.skillType !== SkillTypes.WeaponSkill)) {\r\n            return false;\r\n        }\r\n\r\n        if (buffName === \"PowerSurge\" && (skill.id !== \"Jump\" && skill.id !== \"SpineshatterDive\")) {\r\n            return false;\r\n        }\r\n\r\n        if (buffName === \"BloodOfTheDragon\" && (skill.id !== \"Jump\" && skill.id !== \"SpineshatterDive\")) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    classSpecificEventProcessing(event: ISimEvent): void {\r\n        if (event.skill.id === \"Geirskogul\" && event.eventType === SimEventType.AnimationFinished) {\r\n            var bloodOfTheDragonBuffEndEvent: ISimEvent; \r\n            this.events.forEach((value, index) => {\r\n                if (value.skill.id === \"BloodOfTheDragon\" && value.eventType === SimEventType.BuffEnd) {\r\n                    bloodOfTheDragonBuffEndEvent = value;\r\n                }\r\n            });\r\n\r\n            this.removeFromSimEvents(this.dragoon.BloodOfTheDragon);\r\n            var newEndTime: number;\r\n            if (bloodOfTheDragonBuffEndEvent.timestamp - this.time <= 10000) {\r\n                this.removeFromActiveBuffs(\"BloodOfTheDragon\");\r\n            } else {\r\n                newEndTime = bloodOfTheDragonBuffEndEvent.timestamp - 10000;\r\n                var newBuffEndEvent = new SimEvent(newEndTime, this.dragoon.BloodOfTheDragon, SimEventType.BuffEnd);\r\n                this.addToSimEvents([newBuffEndEvent]);\r\n            }\r\n            this.updateBuffEndTime(\"BloodOfTheDragon\", newEndTime);\r\n        }\r\n\r\n        if ((event.skill.id === \"FangAndClaw\" || event.skill.id === \"WheelingThrust\") && event.eventType === SimEventType.AnimationFinished) {\r\n            var bloodOfTheDragonBuffEndEvent: ISimEvent;\r\n            var newBuffEndEvent: ISimEvent;\r\n\r\n            this.events.forEach((value, index) => {\r\n                if (value.skill.id === \"BloodOfTheDragon\" && value.eventType === SimEventType.BuffEnd) {\r\n                    bloodOfTheDragonBuffEndEvent = value;\r\n                }\r\n            });\r\n\r\n            this.removeFromSimEvents(this.dragoon.BloodOfTheDragon);\r\n            var newEndTime: number;\r\n            if (bloodOfTheDragonBuffEndEvent.timestamp - this.time > 15000) {\r\n                newEndTime = this.time + 30000;\r\n            } else {\r\n                newEndTime = bloodOfTheDragonBuffEndEvent.timestamp + 15000;\r\n            }\r\n            newBuffEndEvent = new SimEvent(newEndTime, this.dragoon.BloodOfTheDragon, SimEventType.BuffEnd);\r\n            this.updateBuffEndTime(\"BloodOfTheDragon\", newEndTime);\r\n            this.addToSimEvents([newBuffEndEvent]);\r\n        }\r\n    }\r\n\r\n    validateActivatedSkillModelSpecific(skill: ISkill): boolean {\r\n        if ((skill.id === \"WheelingThrust\" && !this.activeBuffs.some(ab => ab.skill.id === \"BloodOfTheDragon\"))\r\n            || (skill.id === \"FangAndClaw\" && !this.activeBuffs.some(ab => ab.skill.id === \"BloodOfTheDragon\"))\r\n            || (skill.id === \"Geirskogul\" && !this.activeBuffs.some(ab => ab.skill.id === \"BloodOfTheDragon\"))\r\n            || (skill.id === \"WheelingThrust\" && !this.nextInChain.some(skillId => skillId === \"WheelingThrust\"))\r\n            || (skill.id === \"FangAndClaw\" && !this.nextInChain.some(skillId => skillId === \"FangAndClaw\"))) {\r\n            return false;\r\n        }\r\n        return true; \r\n    }\r\n} ","import { DragoonSimulator } from './DragoonSimulator';\r\n\r\nexport class DragoonSimulatorTests {\r\n    constructor() {\r\n        //#region DRAGOON SPECIFIC LOGIC\r\n        QUnit.test(\"Buff drops after single use: Life Surge\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.LifeSurge);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n\r\n            assert.equal(dragoonSimulator.damageLog.length, 2);\r\n            assert.equal(dragoonSimulator.totalPotency, 150 + 75 + 150);\r\n        });\r\n\r\n        QUnit.test(\"Life Surge only works on weaponskills: Jump\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.LifeSurge);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.Jump);\r\n\r\n            assert.equal(dragoonSimulator.damageLog.length, 1);\r\n            assert.equal(dragoonSimulator.totalPotency, 200);\r\n        });\r\n\r\n        QUnit.test(\"Life Surge only works on weaponskills: Leg Sweep, True Thrust\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.LifeSurge);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.LegSweep);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n\r\n            assert.equal(dragoonSimulator.damageLog.length, 2);\r\n            assert.equal(dragoonSimulator.totalPotency, 130 + 150 + 75);\r\n        });\r\n\r\n        QUnit.test(\"Life Surge doesnt drop from activeBuffs array when using abilities\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.LifeSurge);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.Jump);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.SpineshatterDive);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.DragonfireDive);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs[0].skill.id, \"LifeSurge\");\r\n        });\r\n\r\n        QUnit.test(\"Power Surge works on: Jump\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.PowerSurge);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.Jump);\r\n\r\n            assert.equal(dragoonSimulator.damageLog.length, 1);\r\n            assert.equal(dragoonSimulator.totalPotency, 200 + 100);\r\n        });\r\n\r\n        QUnit.test(\"Power Surge works on: Spineshatter Dive\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.PowerSurge);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.SpineshatterDive);\r\n\r\n            assert.equal(dragoonSimulator.damageLog.length, 1);\r\n            assert.equal(dragoonSimulator.totalPotency, 170 + 85);\r\n        });\r\n\r\n        QUnit.test(\"Buff drops after single use: Power Surge\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.PowerSurge);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.Jump);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.SpineshatterDive);\r\n\r\n            assert.equal(dragoonSimulator.damageLog.length, 2);\r\n            assert.equal(dragoonSimulator.totalPotency, 200 + 100 + 170);\r\n        });\r\n\r\n        QUnit.test(\"Power Surge doesnt work on anything other than jump/spineshatter dive\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.PowerSurge);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n\r\n\r\n            assert.equal(dragoonSimulator.damageLog.length, 3);\r\n            assert.equal(dragoonSimulator.totalPotency, 150 + 200 + 360);\r\n        });\r\n\r\n        QUnit.test(\"Power Surge doesnt drop from activeBuffs array when using weaponskills\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.PowerSurge);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs[0].skill.id, \"PowerSurge\");\r\n        });\r\n\r\n        QUnit.test(\"Fang and claw doesnt activate without the blood of dragon buff\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FangAndClaw);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 0);\r\n            assert.equal(dragoonSimulator.time, 0);\r\n            assert.equal(dragoonSimulator.damageLog.length, 0);\r\n        });\r\n\r\n        QUnit.test(\"Wheeling Thrust doesnt activate without the blood of dragon buff\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.WheelingThrust);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 0);\r\n            assert.equal(dragoonSimulator.time, 0);\r\n            assert.equal(dragoonSimulator.damageLog.length, 0);\r\n        });\r\n\r\n        QUnit.test(\"Fang and claw doesnt activate without the correct chain\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FangAndClaw);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 0);\r\n            assert.equal(dragoonSimulator.time, 0);\r\n            assert.equal(dragoonSimulator.damageLog.length, 0);\r\n        });\r\n\r\n        QUnit.test(\"Wheeling Thrust doesnt activate without the correct chain\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.WheelingThrust);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 0);\r\n            assert.equal(dragoonSimulator.time, 0);\r\n            assert.equal(dragoonSimulator.damageLog.length, 0);\r\n        });\r\n\r\n        QUnit.test(\"Fang and claw doesnt activates on proper chain without buff\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FangAndClaw);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 0);\r\n            assert.equal(dragoonSimulator.time, 6300);\r\n            assert.equal(dragoonSimulator.damageLog.length, 3);\r\n        });\r\n\r\n        QUnit.test(\"Wheeling Thrust doesnt activates on proper chain without buff\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.WheelingThrust);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 0);\r\n            assert.equal(dragoonSimulator.time, 6300);\r\n            assert.equal(dragoonSimulator.damageLog.length, 3);\r\n        });\r\n\r\n        QUnit.test(\"Fang and claw doesnt activate without proper chain with buff\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FangAndClaw);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 1);\r\n            assert.equal(dragoonSimulator.time, 1300);\r\n            assert.equal(dragoonSimulator.damageLog.length, 0);\r\n        });\r\n\r\n        QUnit.test(\"wheeling thrust doesnt activate without proper chain with buff\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.WheelingThrust);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 1);\r\n            assert.equal(dragoonSimulator.time, 1300);\r\n            assert.equal(dragoonSimulator.damageLog.length, 0);\r\n        });\r\n\r\n        QUnit.test(\"Fang and claw activates on proper chain and buff\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FangAndClaw);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 1);\r\n            assert.equal(dragoonSimulator.time, 8900);\r\n            assert.equal(dragoonSimulator.damageLog.length, 4);\r\n        });\r\n\r\n        QUnit.test(\"Wheeling Thrust activates on proper chain and buff\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.WheelingThrust);\r\n\r\n            assert.equal(dragoonSimulator.activeBuffs.length, 1);\r\n            assert.equal(dragoonSimulator.time, 8900);\r\n            assert.equal(dragoonSimulator.damageLog.length, 4);\r\n        });\r\n\r\n        QUnit.test(\"Damage calculation: fang and claw\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FangAndClaw);\r\n\r\n            assert.equal(dragoonSimulator.damageLog[3].totalDamage, 290);\r\n        });\r\n\r\n        QUnit.test(\"Damage calculation: wheeling thrust\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.WheelingThrust);\r\n\r\n            assert.equal(dragoonSimulator.damageLog[3].totalDamage, 290);\r\n        });\r\n\r\n        QUnit.test(\"Damage calculation: fang and claw chain with buff at beginning\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FangAndClaw);\r\n\r\n            assert.equal(dragoonSimulator.totalPotency, 150 + 200 + 360 + 290);\r\n        });\r\n\r\n        QUnit.test(\"Damage calculation: wheeling thrust chain with buff at beginning\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.WheelingThrust);\r\n\r\n            assert.equal(dragoonSimulator.totalPotency, 150 + 200 + 360 + 290);\r\n        });\r\n\r\n        QUnit.test(\"Damage calculation: blood of the dragon + jump\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.Jump);\r\n\r\n            assert.equal(dragoonSimulator.totalPotency, 200 + 60);\r\n        });\r\n\r\n        QUnit.test(\"Damage calculation: blood of the dragon + spineshatter\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon);\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.SpineshatterDive);\r\n\r\n            assert.equal(dragoonSimulator.totalPotency, 170 + 51);\r\n        });\r\n\r\n        QUnit.test(\"BotD time increase when less then 15 seconds - Wheeling Thrust\", function (assert) {\r\n            var dragoonSimulator: DragoonSimulator = new DragoonSimulator();\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.TrueThrust); //1300\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.VorpalThrust); //3800\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.BloodOfTheDragon); //5100 - buff 15000 : 20100\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.FullThrust); //6400 - buff 12500 : 18900\r\n            dragoonSimulator.activateSkill(dragoonSimulator.dragoon.WheelingThrust); // 8900  - buff 10000 + 15000 : 33900\r\n\r\n            var actual = dragoonSimulator.activeBuffs[0].skill.id;\r\n            var actual2 = dragoonSimulator.time;\r\n            var actual3 = dragoonSimulator.activeBuffs[0].endTime;\r\n\r\n            assert.equal(actual, \"BloodOfTheDragon\");\r\n            assert.equal(actual2, 8900);\r\n            assert.equal(actual3, 33900);\r\n        });\r\n    }\r\n}\r\n\r\n// test what happens when WT activates and BotD has dropped. \r\n\r\n// write unit test about buff end time relative to skill being used. it should start after animation has finished.\r\n\r\n// geirskogul didnt lower the timer by the correct amount.\r\n\r\n// im not sure the buff end event was being updated correctly when using WT. need to test against this. ","import { Dragoon } from './Dragoon';\r\n\r\nexport class DragoonTests {\r\n    constructor() {\r\n        QUnit.test(\"QUnit added to project\", function (assert) {\r\n            var expected = \"result\";\r\n            assert.equal(expected, \"result\");\r\n        });\r\n\r\n        QUnit.test(\"All skills should have a name\", function (assert) {\r\n            var allAbilitiesHaveAName = true;\r\n            for (var dragoonSkill in Dragoon) {\r\n                var skill: ISkill = Dragoon[dragoonSkill];\r\n                if (skill.name.length <= 0) {\r\n                    allAbilitiesHaveAName = false;\r\n                    console.log(\"Skill:  \" + skill.name + \" - Name:  \" + skill.name);\r\n                }\r\n            }\r\n            assert.equal(allAbilitiesHaveAName, true);\r\n        });\r\n\r\n        QUnit.test(\"All abilities should have a cooldown\", function (assert) {\r\n            var allAbilitiesHaveCooldowns = true;\r\n            for (var dragoonSkill in Dragoon) {\r\n                var skill: ISkill = Dragoon[dragoonSkill];\r\n                if (skill.skillType == SkillTypes.Ability && skill.cooldown <= 0) {\r\n                    allAbilitiesHaveCooldowns = false;\r\n                    console.log(\"Skill:  \" + skill.name + \" - Cooldown:  \" + skill.cooldown);\r\n                }\r\n            }\r\n            assert.equal(allAbilitiesHaveCooldowns, true);\r\n        });\r\n\r\n        QUnit.test(\"All weapon skills should have potency\", function (assert) {\r\n            var allAbilitiesHavePotency = true;\r\n            for (var dragoonSkill in Dragoon) {\r\n                var skill: ISkill = Dragoon[dragoonSkill];\r\n                if (skill.skillType == SkillTypes.WeaponSkill && skill.potency <= 0) {\r\n                    allAbilitiesHavePotency = false;\r\n                    console.log(\"Skill:  \" + skill.name + \" - Potency:  \" + skill.potency);\r\n                }\r\n            }\r\n            assert.equal(allAbilitiesHavePotency, true);\r\n        });\r\n\r\n        QUnit.test(\"All weapon skills should have tpCost (except wheel thrust and Fang and Claw)\", function (assert) {\r\n            var allAbilitiesHaveTpCost = true;\r\n            for (var dragoonSkill in Dragoon) {\r\n                var skill: ISkill = Dragoon[dragoonSkill];\r\n                if (skill.skillType == SkillTypes.WeaponSkill && skill.tpCost <= 0) {\r\n                    if (skill.name != \"Wheeling Thrust\" && skill.name != \"Fang And Claw\") {\r\n                        allAbilitiesHaveTpCost = false;\r\n                        console.log(\"Skill:  \" + skill.name + \" - TP Cost:  \" + skill.tpCost);\r\n                    }\r\n                }\r\n            }\r\n            assert.equal(allAbilitiesHaveTpCost, true);\r\n        });\r\n\r\n        QUnit.test(\"All skills should have an animation duration\", function (assert) {\r\n            var allAbilitiesHaveAnimationDuration = true;\r\n            for (var dragoonSkill in Dragoon) {\r\n                var skill: ISkill = Dragoon[dragoonSkill];\r\n                if (skill.animationDuration <= 0) {\r\n                    allAbilitiesHaveAnimationDuration = false;\r\n                    console.log(\"Skill:  \" + skill.name + \" - Animation Duration:  \" + skill.animationDuration);\r\n                }\r\n            }\r\n            assert.equal(allAbilitiesHaveAnimationDuration, true);\r\n        });\r\n\r\n        QUnit.test(\"If a skill has dot potency, it should also have dot duration\", function (assert) {\r\n            var abilitiesHaveBothDotDurationAndPotency = true;\r\n            for (var dragoonSkill in Dragoon) {\r\n                var skill: ISkill = Dragoon[dragoonSkill];\r\n                if (skill.dotDuration > 0 || skill.dotPotency > 0) {\r\n                    if (skill.dotDuration <= 0 || skill.dotPotency <= 0) {\r\n                        abilitiesHaveBothDotDurationAndPotency = false;\r\n                        console.log(\"Skill:  \" + skill.name + \" - Dot Duration:  \" + skill.dotDuration + \" - Dot Potency:  \" + skill.dotPotency);\r\n                    }\r\n                }\r\n            }\r\n            assert.equal(abilitiesHaveBothDotDurationAndPotency, true);\r\n        });\r\n\r\n        QUnit.test(\"If a skill has buff potency, it should also have buff duration\", function (assert) {\r\n            var abilitiesHaveBothBuffDurationAndPotency = true;\r\n            for (var dragoonSkill in Dragoon) {\r\n                var skill: ISkill = Dragoon[dragoonSkill];\r\n                if (skill.dotDuration > 0 || skill.dotPotency > 0) {\r\n                    if (skill.dotDuration <= 0 || skill.dotPotency <= 0) {\r\n                        abilitiesHaveBothBuffDurationAndPotency = false;\r\n                        console.log(\"Skill:  \" + skill.name + \" - Buff Duration:  \" + skill.buffDuration + \" - Dot Potency:  \" + skill.buffPotency);\r\n                    }\r\n                }\r\n            }\r\n            assert.equal(abilitiesHaveBothBuffDurationAndPotency, true);\r\n        });\r\n    } \r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n      .feature('resources')\n      .plugin('aurelia-chartist');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","\r\n\r\n/// <reference path=\"../scripts/typings/chartist/index.d.ts\" />\r\n\r\nexport class PPSChart {\r\n    data: Chartist.IChartistData = {\r\n        labels: [1, 2, 3],\r\n        series: [[4, 5, 6]]\r\n    };\r\n\r\n    chart: Chartist.IChartistLineChart;\r\n\r\n    constructor() {\r\n        this.loadGraph();\r\n    } \r\n\r\n    loadGraph() {\r\n        var element: any = $(\".ct-chart\");\r\n        setTimeout(() => {\r\n            if (element.length > 0) {\r\n                this.chart = new Chartist.Line('.ct-chart', {\r\n                    series: [\r\n                        {\r\n                            name: 'series-1',\r\n                            data: [\r\n                                { x: 1000, y: 100 }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }, {\r\n                    axisX: {\r\n                        type: Chartist.FixedScaleAxis,\r\n                        divisor: 5,\r\n                        labelInterpolationFnc: function (value) {\r\n                            var minutes: number = Math.floor(value / 60000);\r\n                            var seconds: number = (value % 60000) / 1000;\r\n                            if (minutes > 0) {\r\n                                return minutes + \"m \" + seconds + \"s\";\r\n                            }\r\n                            return seconds + \"s\";\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                this.loadGraph();\r\n            }\r\n        }, 1000);         \r\n    }\r\n\r\n    updateData(seriesData: Array<Chartist.IChartistXYSeriesData>) {\r\n        this.chart.update({ series: seriesData });\r\n    };\r\n}","enum SimEventType {\r\n    Cooldown,\r\n    DotTick,\r\n    DotEnd,\r\n    BuffEnd,\r\n    GlobalCooldown,\r\n    AnimationFinished, \r\n    ChainEnd\r\n} ","import { PPSChart } from './PPSChart';\r\nimport { DragoonSimulator } from './DragoonSimulator';\r\nimport { BindingEngine, inject } from 'aurelia-framework';\r\n\r\n@inject(BindingEngine)\r\nexport class Simulator {\r\n    ppsChart: PPSChart = window['ppsChart'] = new PPSChart();\r\n    dragoonSimulator: DragoonSimulator = window['dragoonSimulator'] = new DragoonSimulator();\r\n    currentRotationIndex: number = -1;\r\n    chartData: Array<Chartist.IChartistXYSeriesData> = [];\r\n\r\n    bindingEngine: BindingEngine;\r\n\r\n    constructor(bindingEngine) {\r\n        window['simulator'] = this;\r\n\r\n        this.startNewRotation();\r\n\r\n        this.bindingEngine = bindingEngine;\r\n        let subscription = this.bindingEngine\r\n            .collectionObserver(this.dragoonSimulator.ppsLog)\r\n            .subscribe(this.ppsLogSubscriptionCallback);\r\n    }\r\n\r\n    startNewRotation() {\r\n        if (this.currentRotationIndex == -1 || this.dragoonSimulator.ppsLog.length > 0) {\r\n            this.currentRotationIndex++;\r\n            this.dragoonSimulator.reset();\r\n            console.log(\"new rotation\");\r\n        }\r\n    }\r\n\r\n    ppsLogSubscriptionCallback(splices) {\r\n        // REALLY NEED TO ADDRESS THIS. HOW DO I GET REFERENCE TO VIEWMODEL INSIDE THE CALLBACK?\r\n        var vm: Simulator = window['simulator'];\r\n\r\n        vm.chartData[vm.currentRotationIndex] = vm.updateRotationSeries(vm.dragoonSimulator.ppsLog);\r\n        \r\n        vm.updateChart();\r\n    }; \r\n\r\n    updateChart() {\r\n        this.ppsChart.updateData(this.chartData);\r\n    };\r\n\r\n    updateRotationSeries(ppsLog: Array<IPPSEntry>): Chartist.IChartistXYSeriesData {\r\n        var seriesObject: Chartist.IChartistXYSeriesData = { name: 'series-' + this.currentRotationIndex, data: [] };\r\n        ppsLog.forEach((item, index) => {\r\n            seriesObject.data.push({x: item.time, y: item.pps});\r\n        });\r\n\r\n        return seriesObject;\r\n    }\r\n}","enum SkillTypes {\r\n    Ability,\r\n    Buff,\r\n    DOT,\r\n    WeaponSkill\r\n}","import { DragoonSimulator } from './DragoonSimulator';\r\nimport { BaseSimulatorTests } from './BaseSimulatorTests';\r\nimport { DragoonTests } from './DragoonTests';\r\nimport { DragoonSimulatorTests } from './DragoonSimulatorTests';\r\n\r\nexport class Tests {\r\n    constructor() {\r\n        var vm: DragoonSimulator = new DragoonSimulator();\r\n        var dragoonModelTests = new DragoonTests();\r\n        var baseSimulatorTests = new BaseSimulatorTests();\r\n        var dragoonSimulatorTests = new DragoonSimulatorTests();\r\n        QUnit.start();\r\n    }\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}